from fastapi import APIRouter, Depends
from starlette import status

from app.models.common import Id
from app.models.target import TargetList, Target, UpsertTargetRequest
from app.services import get_target_service, TargetService

router = APIRouter(prefix="/target", tags=["target"])


@router.get(
    path='/',
    description="Получение списка целей",
    response_model=TargetList
)
async def get_targets(
        target_service: TargetService = Depends(get_target_service)
):
    return await target_service.get_targets()


@router.get(
    path='/{target_id}',
    description="Получение цели по id",
    response_model=Target
)
async def get_target_by_id(
        target_id: int,
        target_service: TargetService = Depends(get_target_service)
):
    return await target_service.get_target_by_id(target_id)


@router.post(
    path='/',
    description="Добавление новой цели",
    status_code=status.HTTP_201_CREATED,
    response_model=Id
)
async def create_target(
        body: UpsertTargetRequest,
        target_service: TargetService = Depends(get_target_service)
):
    return await target_service.create_target(name=body.name, url=body.url,
                                              description=body.description)


@router.put(
    path="/{target_id}",
    description="Обновление информации о цели",
)
async def update_target(
        target_id: int,
        body: UpsertTargetRequest,
        target_service: TargetService = Depends(get_target_service)
):
    await target_service.update_target(target_id, body.name, body.url, body.description)


@router.delete(
    path="/{target_id}",
    description="Удаление цели",
    status_code=status.HTTP_200_OK
)
async def delete_target(
        target_id: int,
        target_service: TargetService = Depends(get_target_service)
):
    return await target_service.delete_target_by_id(target_id)
