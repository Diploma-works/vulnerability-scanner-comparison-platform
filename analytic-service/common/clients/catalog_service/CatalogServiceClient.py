from common.clients.BaseHttpClient import BaseHttpClient
from common.clients.catalog_service.models.scanner import ScannerList, Scanner, VolumeDB
from common.clients.catalog_service.models.target import TargetList, Target
from common.clients.catalog_service.models.vulnerability import VulnerabilityTypesList, VulnerabilityType, \
    VulnerabilityGroupsList, VulnerabilityGroup


class CatalogServiceClient(BaseHttpClient):
    def __init__(self, base_url: str):
        super().__init__(base_url)

    async def get_user_targets(self, auth_token: str) -> TargetList:
        response = await self.do_get("/target/", headers={"Authorization": f"Bearer {auth_token}"})
        return TargetList(targets=list(map(lambda x: Target.construct(**dict(x.items())), response.get('targets'))))

    async def get_scanners(self) -> ScannerList:
        response = await self.do_get("/scanner/")
        return ScannerList(scanners=list(map(lambda x: Scanner.construct(**dict(x.items())), response.get('scanners'))))

    async def get_scanner_by_id(self, scanner_id: int) -> Scanner:
        response = await self.do_get(f"/scanner/{scanner_id}")
        volumes = response.get('volumes')
        if isinstance(volumes, list):
            volumes = [VolumeDB.construct(**dict(v)) for v in volumes]
        else:
            volumes = VolumeDB.construct(**dict(volumes))
        scanner = Scanner.construct(**dict(response.items()))
        scanner.volumes = volumes
        return scanner

    async def get_vulnerabilities_types(self) -> VulnerabilityTypesList:
        response = await self.do_get("/vulnerability/list")
        return VulnerabilityTypesList(
            types=list(map(lambda x: VulnerabilityType.construct(**dict(x.items())), response.get('types')))
        )

    async def get_vulnerabilities_groups(self) -> VulnerabilityGroupsList:
        response = await self.do_get("/vulnerability/groups")
        return VulnerabilityGroupsList(
            groups=list(map(lambda x: VulnerabilityGroup.construct(**dict(x.items())), response.get('groups')))
        )
