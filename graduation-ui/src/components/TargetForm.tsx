import React, {useState} from 'react';
import {Target} from "../api/catalog-service-client";
import ClientFacade from "../api/ClientFacade";
import classNames from "classnames";

export interface TargetFormProps{
  isActive: boolean,
  setIsActive: Function,
  setReloadTargetsFlag: Function
  target?: Target,
}
const TargetForm = (props: TargetFormProps) => {

  const [name, setName] = useState<string>("")
  const [description, setDescription] = useState<string>("")
  const [url, setUrl] = useState<string>("")
  const [isLoading, setIsLoading] = useState<boolean>(false)

  const drop = () => {
    setName("")
    setDescription("")
    setUrl("")
  }

  return (
    <div className={"modal " + (props.isActive ? "is-active" : "")}>
      <div
        className="modal-background"
        onClick={() => {
          drop()
          props.setIsActive(false)
        }}/>
      <div className="modal-card">
        <header className="modal-card-head">
          <p className="modal-card-title has-text-weight-bold">
            {props.target ? "Изменить цель" : "Добавить цель"}
          </p>
          <button
            className="delete"
            aria-label="close"
            onClick={() => {
              drop()
              props.setIsActive(false)
            }}/>
        </header>
        <section className="modal-card-body">
          <div className="field">
            <label className="has-text-weight-semibold">Название цели</label>
            <input
              className="input is-medium"
              type="text"
              value={name}
              onChange={(event) => setName(event.target.value)}
            />
          </div>
          <div className="field">
            <label className="has-text-weight-semibold">Описание цели</label>
            <input
              className="input is-medium"
              type="text"
              value={description}
              onChange={(event) => setDescription(event.target.value)}
            />
          </div>
          <div className="field">
            <label className="has-text-weight-semibold">Url</label>
            <input
              className="input is-medium"
              type="text"
              value={url}
              onChange={(event) => setUrl(event.target.value)}
            />
          </div>
        </section>
        <footer className="modal-card-foot">
          <div className="buttons">
            <button
              className={classNames("button", "is-rounded", {"is-loading" : isLoading})}
              onClick={() => {
                setIsLoading(true)
                if (!props.target) {
                  ClientFacade.catalogServiceClient.target.createTarget({
                    name: name,
                    description: description,
                    url: url
                  }).then((response) => {
                    console.log('target added')
                    props.setReloadTargetsFlag(true)
                    setIsLoading(false)
                    drop()
                    props.setIsActive(false)
                  }).catch((error) => {
                    setIsLoading(false)
                    console.log(error.message)
                  })
                } else {
                  ClientFacade.catalogServiceClient.target.updateTarget(props.target!.id, {
                    name: name,
                    description: description,
                    url: url
                  }).then((response) => {
                    console.log('target updated')
                    setIsLoading(false)
                    props.setReloadTargetsFlag(true)
                    drop()
                    props.setIsActive(false)
                  }).catch((error) => {
                    setIsLoading(false)
                    console.log(error.message)
                  })
                }
              }}>
              Добавить
            </button>
            <button
              className="button is-rounded is-pulled-right"
              onClick={() => {drop()}}
            >
              Сбросить
            </button>
          </div>
        </footer>
      </div>
    </div>
  );
};

export default TargetForm;