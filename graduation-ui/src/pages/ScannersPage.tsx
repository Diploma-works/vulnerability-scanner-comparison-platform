import React, {useEffect, useState} from 'react';
import ContentControls from "../components/ContentControls";
import {CatalogServiceClient, Scanner} from "../api/catalog-service-client";
import ClientFacade from "../api/ClientFacade";
import clientFacade from "../api/ClientFacade";
import {LoadingLabel} from "../elements/LoadingLabel";

const ScannersPage = () => {

  const [scanners, setScanners] = useState<Scanner[]>([])

  const [isLoading, setIsLoading] = useState<boolean>(true)
  const [isDisabledControls, setIsDisabledControls] = useState<boolean>(true)

  useEffect(() => {
    setIsLoading(true)
    clientFacade.catalogServiceClient.external.getScanners()
      .then((response) => {
        setScanners(response.scanners)
        setIsLoading(false)
      })
  }, []);

  const pageDefinition = () => {
    return(
      <div>
        <span className="icon is-big is-left">
            <i className="fa fa-bomb" aria-hidden="true"></i>
        </span>
        <label className="ml-2">Сканеры</label>
      </div>
    )
  }

  const controlButtons = [
    <button
      className="button is-rounded"
      disabled={isDisabledControls}
    >
        <span className="icon is-left">
          <i className="fa fa-flag" aria-hidden="true"></i>
        </span>
      <span>Просканировать</span>
    </button>
  ]
  const Scanners = () => {
    return scanners.length === 0
      ? (
        <div className="box has-text-centered">
          Сервис сканеров недоступен :(
        </div>
      )
      : (
        <div>
          {scanners.map((scanner) =>
            (<div></div>)
          )}
        </div>
      )
  }

  return (
    <React.Fragment>
      <div className="box m-5">
        <ContentControls pageDefinitionElement={pageDefinition()} controlButtons={controlButtons}/>
      </div>
      <div className="m-5">
        {isLoading
          ? (
            <div className="box">
              {LoadingLabel}
            </div>
          )
          : Scanners()
        }
      </div>
    </React.Fragment>
  );
};

export default ScannersPage;