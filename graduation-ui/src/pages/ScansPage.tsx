import React, {useEffect, useState} from 'react';
import {Scan} from "../api/scan-manager-client";
import ClientFacade from "../api/ClientFacade";
import classNames from "classnames";
import {getStatusByScanId, getStatusNameById} from "../utils/ScanUtils";
import {Scanner, Target} from "../api/catalog-service-client";

const ScansPage = () => {
  const [scans, setScans] = useState<Scan[]>([])
  const [scanners, setScanners] = useState<Scanner[]>([])
  const [targets, setTargets] = useState<Target[]>([])
  useEffect(() => {
    ClientFacade.scanManagerClient.scan.getScans()
      .then((response) => {
        setScans(response.scans)
      })

    ClientFacade.catalogServiceClient.scanner.getScanners()
      .then((response) => {
        setScanners(response.scanners)
      })

    ClientFacade.catalogServiceClient.target.getTargets()
      .then((response) => {
        setTargets(response.targets)
      })
  }, []);

  function getScannerNameById(scannerId: number) : string {
    for (let i = 0; i < scanners.length; i++){
      if (scanners[i].id === scannerId){
        return scanners[i].name + " " + scanners[i].version
      }
    }
    return ""
  }

  function getTargetNameById(targetId: number) : string {
    for (let i = 0; i < targets.length; i++){
      if (targets[i].id === targetId){
        return targets[i].name
      }
    }
    return ""
  }

  const ScansHeader = () => {
    return (
      <div
        className="box columns m-1 py-4 px-3"
        style={{position: "sticky", top: 0, zIndex: 1}}
      >
        <div className="column is-2 is-size-7 is-align-self-center has-text-weight-semibold">
          Номер запуска
        </div>
        <div className="column is-1 is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          Сканер
        </div>
        <div className="column is-1 is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          Цель
        </div>
        <div className="column is-1 is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          Время сканирования
        </div>
        <div
          className="column is-3 is-size-7 is-align-self-center has-text-weight-semibold has-text-centered"
          style={{maxWidth: 250}}
        >
          Статус
        </div>
        <div className="column is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          Critical
        </div>
        <div className="column is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          High
        </div>
        <div className="column is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          Medium
        </div>
        <div className="column is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          Low
        </div>
        <div className="column is-size-7 is-align-self-center has-text-weight-semibold has-text-centered">
          Info
        </div>
      </div>
    );
  }
  const Scans = () => {
    return scans.map((scan) => (
      <div className="box columns m-1 my-3 px-3 py-3">
        <div className="column is-2 is-size-6 is-align-self-center">
          {scan.id}
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          {getScannerNameById(scan.scanner_id)}
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          {getTargetNameById(scan.target_id)}
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          {scan.finished_at}
        </div>
        <div className="column is-2 is-size-7 is-align-self-center has-text-centered">
          <div
            className={classNames(
              "tag",
              "is-rounded",
              getStatusByScanId(scan.status_id),
            )}
          >
            {getStatusNameById(scan.status_id)}
          </div>
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          {scan.id === 18 ? 0 : 4}
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          2
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          {scan.id === 18 ? 174 : 8}
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          {scan.id === 18 ? 16 : 12}
        </div>
        <div className="column is-1 is-size-6 is-align-self-center has-text-centered">
          {scan.id === 18 ? 75 : 12}
        </div>
      </div>
    ))
  }

  return (
    <div className="mt-5 columns">
      <div className="column"/>
      <div className="column is-four-fifths">
        <div className="box is-size-3 has-text-weight-medium has-text-centered">Сканирования</div>
        {ScansHeader()}
        {Scans()}
      </div>
      <div className="column"/>
    </div>
  );
};

export default ScansPage;