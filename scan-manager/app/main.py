import uvicorn
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.routing import APIRoute

from app.config import Config
from app.events import create_start_app_db_event, create_stop_app_db_event, create_start_catalog_service_client, \
    create_stop_catalog_service_client, create_start_scanner_manager, create_stop_scanner_manager
from controllers.main import router as main_router

config = Config()


def create_application() -> FastAPI:
    app = FastAPI(**config.app)
    app.add_middleware(
        CORSMiddleware,
        allow_origins=config.app.allowed_hosts,
        allow_credentials=True,
        allow_methods=["GET", "POST", "PUT", "DELETE"],
        allow_headers=["*"],
    )

    app.add_event_handler("startup", create_start_app_db_event(app, config))
    app.add_event_handler("startup", create_start_catalog_service_client(app, config))
    app.add_event_handler("startup", create_start_scanner_manager(app))
    app.add_event_handler("shutdown", create_stop_app_db_event(app))
    app.add_event_handler("shutdown", create_stop_catalog_service_client(app))
    app.add_event_handler("shutdown", create_stop_scanner_manager(app))

    app.include_router(main_router, prefix=config.app.api_prefix)
    for route in app.routes:
        if isinstance(route, APIRoute):
            route.operation_id = route.name

    return app


if __name__ == "__main__":
    uvicorn.run(
        create_application(),
        host=config.app.host,
        port=config.app.port,
        log_level="info"
    )
